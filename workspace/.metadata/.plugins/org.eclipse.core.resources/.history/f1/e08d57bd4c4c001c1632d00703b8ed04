
#include "spi_cmv12000.h"

/* 	Determine in ZYNQ7000.c implementation		*/
extern XScuGic xInterruptController;


/************************** Variable Definitions ********************************/
XSpi SpiInstanceCmv12000;					/* The instance of the Spi device   */
XSpi_Stats statsSPIcmv12000;				/* Statyscit SPI interrupt			*/
volatile static int TransferProgress;		/* Transfer in progress flag		*/
static int ErrorCount;						/* Statistic error counter			*/
static u8 ReadBuffer[128];					/* Read buffer from Slave			*/
static u8 WriteBuffer[128];					/* Write buffer to Slave			*/
//static u8 Buffer[16];						/* Data buffer						*/

//u8 wBuffer[10] = {0x00, 0x80, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00};
/********************************************************************************/

static void SpiCmv12000_InterruptStatusHandler(void *CallbackRef, u32 StatusEvent, unsigned int ByteCount)
{

	/*
	 * Indicate the transfer ont the QSPI bus is no longer in progress
	 * regardless of the status event.
	 */
	TransferProgress = FALSE;

	/*
	 * If the event was not transfer done, then track it as an error.
	 */
	if (StatusEvent != XST_SPI_TRANSFER_DONE)
	{
		ErrorCount++;
	}

}

int init_spi_cmv12000()
{

}
